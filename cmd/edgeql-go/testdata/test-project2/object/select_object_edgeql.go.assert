// Code generated by github.com/edgedb/edgedb-go/cmd/edgeql-go DO NOT EDIT.

package object

import (
	"context"
	_ "embed"

	"github.com/edgedb/edgedb-go"
)

//go:embed select_object.edgeql
var selectObjectCmd string

// selectObject
// runs the query found in
// select_object.edgeql
func selectObject(
	ctx context.Context,
	client *edgedb.Client,
) (struct {
	Name     string `edgedb:"Name"`
	Language string `edgedb:"Language"`
	Params   []struct {
		Name    string             `edgedb:"Name"`
		Default edgedb.OptionalStr `edgedb:"Default"`
	} `edgedb:"Params"`
}, error) {
	var result struct {
		Name     string `edgedb:"Name"`
		Language string `edgedb:"Language"`
		Params   []struct {
			Name    string             `edgedb:"Name"`
			Default edgedb.OptionalStr `edgedb:"Default"`
		} `edgedb:"Params"`
	}

	err := client.QuerySingle(
		ctx,
		selectObjectCmd,
		&result,
	)

	return result, err
}

// selectObjectJSON
// runs the query found in
// select_object.edgeql
// returning the results as json encoded bytes
func selectObjectJSON(
	ctx context.Context,
	client *edgedb.Client,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingleJSON(
		ctx,
		selectObjectCmd,
		&result,
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
