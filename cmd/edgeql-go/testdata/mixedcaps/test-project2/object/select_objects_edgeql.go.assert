// Code generated by github.com/edgedb/edgedb-go/cmd/edgeql-go DO NOT EDIT.

package object

import (
	"context"
	_ "embed"

	"github.com/edgedb/edgedb-go"
)

//go:embed select_objects.edgeql
var selectObjectsCmd string

// selectObjectsResult
// is part of the return type for
// selectObjects()
type selectObjectsResult struct {
	Name     string                          `edgedb:"Name"`
	Language string                          `edgedb:"Language"`
	Params   []selectObjectsResultParamsItem `edgedb:"Params"`
}

// selectObjectsResultParamsItem
// is part of the return type for
// selectObjects()
type selectObjectsResultParamsItem struct {
	Name    string             `edgedb:"Name"`
	Default edgedb.OptionalStr `edgedb:"Default"`
}

// selectObjects
// runs the query found in
// select_objects.edgeql
func selectObjects(
	ctx context.Context,
	client *edgedb.Client,
) ([]selectObjectsResult, error) {
	var result []selectObjectsResult

	err := client.Query(
		ctx,
		selectObjectsCmd,
		&result,
	)

	return result, err
}

// selectObjectsJSON
// runs the query found in
// select_objects.edgeql
// returning the results as json encoded bytes
func selectObjectsJSON(
	ctx context.Context,
	client *edgedb.Client,
) ([]byte, error) {
	var result []byte

	err := client.QueryJSON(
		ctx,
		selectObjectsCmd,
		&result,
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
